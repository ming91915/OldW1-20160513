<?xml version="1.0"?>
<doc>
<assembly>
<name>
Projects_vb
</name>
</assembly>
<members>
<member name="M:OldW.Soil.Soil_Excav.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary>
 构造函数：用来模拟分块开挖的土体元素。
 </summary>
	<param name="SoilRemove">用来模拟土体开挖的土体Element</param>
	<remarks></remarks>
</member><member name="T:OldW.Soil.Soil_Excav">
	<summary> 用来模拟分块开挖的土体元素。 </summary>
	<remarks></remarks>
</member><member name="F:OldW.DataManager.Chart_MonitorData.Chart">
	<summary> 数据图表 </summary>
</member><member name="M:OldW.DataManager.Chart_MonitorData.#ctor(OldW.GlobalSettings.InstrumentationType)">
	<summary>
 构造函数
 </summary>
	<param name="Type">窗口的标题：监测类型</param>
	<remarks></remarks>
</member><member name="M:OldW.DataManager.Chart_MonitorData.SetupChart">
	<summary>
 图表的初始化
 </summary>
</member><member name="F:OldW.DataManager.ElementDataManager.ActiveElement">
	<summary> 当前活动的图元 </summary>
</member><member name="F:OldW.DataManager.ElementDataManager.ActiveMonitorData">
	<summary> 当前活动的图元中所保存的监测数据 </summary>
</member><member name="M:OldW.DataManager.ElementDataManager.#ctor(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId},Autodesk.Revit.DB.Document)">
	<summary>
 构造函数
 </summary>
	<param name="eleidCollection">所有要进行处理的测点元素的Id集合</param>
	<param name="document"></param>
	<remarks></remarks>
</member><member name="M:OldW.DataManager.ElementDataManager.SaveTableToElement(System.Object,System.EventArgs)">
	<summary>
 将表格中的数据保存到Element的对应参数中。
 </summary>
	<remarks></remarks>
</member><member name="M:OldW.DataManager.ElementDataManager.FillTableWithElementData(Autodesk.Revit.DB.Element,System.Windows.Forms.DataGridView)">
	<summary>
 将元素的数据写入表格
 </summary>
	<param name="ele"></param>
	<param name="Table"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldW.DataManager.ElementDataManager.DrawData(OldW.Instrumentation.MonitorData_Point)">
	<summary>
 绘制图表
 </summary>
	<param name="Data"></param>
</member><member name="T:OldW.DataManager.ElementDataManager">
	<summary>
 模型中的测点的监测数据的添加，删除，导入导出等
 </summary>
	<remarks></remarks>
</member><member name="P:OldW.Instrumentation.Instrumentation.Monitor">
	<summary>
 监测仪器，对于点测点，其包括地表沉降、立柱隆起、支撑轴力等；
 对于线测点，包括测斜管
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:OldW.Instrumentation.Instrumentation.Type">
	<summary> 监测点的测点类型，也是测点所属的族的名称 </summary>
</member><member name="P:OldW.Instrumentation.Instrumentation.Name">
	<summary> 每一个测点的名称，比如 CX1，LZ2等 </summary>
</member><member name="M:OldW.Instrumentation.Instrumentation.#ctor(Autodesk.Revit.DB.FamilyInstance,OldW.GlobalSettings.InstrumentationType)">
	<summary>
 构造函数
 </summary>
	<param name="Instrumentation">所有类型的监测仪器，包括线测点（测斜管）或点测点（地表沉降、立柱隆起、支撑轴力）等</param>
	<param name="Type">监测点的测点类型，也是测点所属的族的名称</param>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrumentation.FilterInstrumentations(Autodesk.Revit.DB.Document,System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
	<summary>
 从指定的Element集合中，找出所有的监测点元素
 </summary>
	<param name="Elements"> 要进行搜索过滤的Element集合</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrumentation.FilterInstru_Point(Autodesk.Revit.DB.Document,System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
	<summary>
 从指定的Element集合中，找出所有的点测点元素
 </summary>
	<param name="Elements"> 要进行搜索过滤的Element集合</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:OldW.Instrumentation.Instrumentation">
	<summary>
 监测测点：包括线测点（测斜管）或点测点（地表沉降、立柱隆起、支撑轴力）等
 </summary>
	<remarks>
 对于点测点而言，其监测数据是在不同的时间记录的，每一个时间上都只有一个数据。所以其监测数据是一个两列的表格，第一列为时间，第二列为监测数据。
 对于线测点而言（比如测斜管），在每一个时间上都有两列数据，用来记录这一时间上，线测点中每一个位置的监测值。
 </remarks>
</member><member name="M:Excavation.CreateModelSoil(System.Boolean)">
	<summary>
 创建模型土体，此土体单元在模型中应该只有一个。
 </summary>
	<param name="CreateMultipli">是否要在一个族中创建多个实体</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Excavation.CreateExcavationSoil(System.Boolean)">
	<summary>
 创建开挖土体，此土体单元在模型中可以有很多个。
 </summary>
	<param name="CreateMultipli">是否要在一个族中创建多个实体</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Excavation.GetLoopedCurveArray(System.Boolean)">
	<summary>
 从模型中获取要创建开挖土体的边界线
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Excavation.GetLoopCurve">
	<summary>
 获取一组连续封闭的模型线
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Excavation.CreateSoilFamily">
	<summary>
 创建一个模型土体（或者是开挖土体）的族文档，并将其打开。
 </summary>
</member><member name="T:Excavation.CurveSelectionFilter">
	<summary>
 曲线选择过滤器
 </summary>
	<remarks></remarks>
</member><member name="M:Excavation.ConnectElevation(Autodesk.Revit.DB.Document)">
	<summary>
 将土体单元中的深度值与相应的参数进行关联
 </summary>
	<param name="FamDoc"></param>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_GroundSettlement.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary> 构造函数 </summary>
	<param name="GroundSettlementElement">地表垂直位移测点所对应的图元</param>
</member><member name="T:OldW.Instrumentation.Instrum_GroundSettlement">
	<summary>
 测点_地表垂直位移
 </summary>
	<remarks></remarks>
</member><member name="F:OldWDocument.Doc">
	<summary> 每一个OldWDocument对象都绑定了一个Revit的Document对象。 </summary>
</member><member name="P:OldWDocument.Document">
	<summary> 每一个OldWDocument对象都绑定了一个Revit的Document对象。 </summary>
</member><member name="F:OldWDocument.ProjectInfo">
	<summary>
 OldWDocument中保存的与基坑开挖有关的信息
 </summary>
	<remarks></remarks>
</member><member name="M:OldWDocument.#ctor(Autodesk.Revit.DB.Document)">
	<summary>
 构造函数
 </summary>
	<param name="Doc"></param>
	<remarks></remarks>
</member><member name="M:OldWDocument.SearchOrCreate(OldWApplication,Autodesk.Revit.DB.Document)">
	<summary> 在OldWApplication.OpenedDocuments 集合中，搜索是否有与指定的Document相对应的OldWDocument对象 </summary>
	<param name="OldWApp">整个系统的OldWApplication对象，可以通过OldWApplication.Create方法获得。</param>
	<returns>有相对应的对象，则返回之，否则则抛出异常。</returns>
	<remarks></remarks>
</member><member name="M:OldWDocument.Create(OldWApplication,Autodesk.Revit.DB.Document)">
	<summary> 不在OldWApplication.OpenedDocuments 集合中进行搜索，而直接创建一个OldWDocument对象，并添加到OpenedDocuments集合中。 </summary>
	<param name="OldWApp">整个系统的OldWApplication对象</param>
	<param name="Doc">用户应该非常确信此Doc并不在OldWApplication的OpenedDocuments集合中，
 否则，会将一个重复的OldWDocument对象再次添加进OpenedDocuments集合。
 这样虽然不会报错，但是不利于程序的高效。</param>
	<returns>有相对应的对象，则返回之，否则则抛出异常。</returns>
	<remarks></remarks>
</member><member name="M:OldWDocument.CreateNew(OldWApplication,Autodesk.Revit.DB.Document)">
	<summary>
 将一个非OldWDocument类型的文档创建成为一个OldWDocument对象，即在其项目信息中添加参数OldW_Project
 </summary>
	<param name="OldWApp"></param>
	<param name="Doc">注意默认OldWDocument.IsOldWDocument(Doc)为false，如果此Doc的项目信息中有参数OldW_Project，则重新进行绑定可能会出错。</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldWDocument.IsOldWDocument(Autodesk.Revit.DB.Document)">
	<summary>
 判断一个Document文档是否是一个OldW的项目文档，其判断的依据是：：此Document对象所对应的项目，在其“管理-项目信息”中，有一个参数：OldW_Project。
 </summary>
	<param name="Doc">要进行判断的Revit的Document文档</param>
	<returns></returns>
</member><member name="M:OldWDocument.SetProjectInfo(OldWProjectInfo)">
	<summary>
 将与基坑开挖有关的信息保存到Document的相关参数中
 </summary>
	<param name="ProjInfo"></param>
	<remarks></remarks>
</member><member name="M:OldWDocument.GetProjectInfo">
	<summary>
 从Document中提取OldWDocument中保存的与基坑开挖有关的信息
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldWDocument.Equals(Autodesk.Revit.DB.Document)">
	<summary>
 比较指定的Document对象与此OldWDocument对象中的Document对象是否是同一个Revit文档
 </summary>
	<returns>如果这两个Document对象是同一个Revit文档，则返回True，否则返回False。</returns>
</member><member name="M:OldWDocument.CompareDocuments(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Document)">
	<summary>
 比较两个Document对象是否是同一个Revit文档。
 如果这两个Document对象是同一个Revit文档，则返回True，否则返回False。
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldWDocument.FindSoilElement(Autodesk.Revit.DB.Document,System.Int32)">
	<summary>
 找到模型中的开挖土体单元
 </summary>
	<param name="doc">进行土体单元搜索的文档</param>
	<param name="SoilElementId">可能的土体单元的ElementId值</param>
	<returns>如果找到有效的土体单元，则返回对应的FamilyInstance，否则返回Nothing</returns>
	<remarks></remarks>
</member><member name="T:OldWDocument">
	<summary>
 将Revit中与基坑开挖相关的Document对象转换为OldW程序中的OldWDocument对象。
 此OldWDocument对象的标志性特征在于：此Document对象所对应的项目，在其“管理-项目信息”中，有一个参数：OldW_Project。
 在此OldWDocument中，可以在Revit的Document中进行与基坑相关的操作，比如搜索基坑开挖土体，记录测点信息等。
 此对象可以通过静态函数 Create进行构造。
 </summary>
</member><member name="P:OldW.Instrumentation.Instrum_Line.MonitorData">
	<summary>
 线测点的整个施工阶段中的监测数据
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_Line.#ctor(Autodesk.Revit.DB.FamilyInstance,OldW.GlobalSettings.InstrumentationType)">
	<summary>
 构造函数
 </summary>
	<param name="MonitorLine">所有类型的监测管线，包括测斜管，但不包括地表沉降、立柱隆起、支撑轴力等</param>
	<param name="Type">监测点的测点类型，也是测点所属的族的名称</param>
	<remarks></remarks>
</member><member name="T:OldW.Instrumentation.Instrum_Line">
	<summary>
 所有类型的线监测，包括测斜管
 </summary>
	<remarks></remarks>
</member><member name="M:OldW.Soil.Soil_Model.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary>
 构造函数：不要直接通过New Soil_Model来创建此对象，而应该用 FindSoilModel 方法来从模型中返回。
 </summary>
	<param name="ModelSoil">模型中的开挖土体单元</param>
	<remarks></remarks>
</member><member name="M:OldW.Soil.Soil_Model.RemoveSoil(OldW.Soil.Soil_Excav)">
	<summary>
 从当前的开挖状态中，移除指定的一块土，用来模拟土体的开挖
 </summary>
	<param name="SoilToRemove"></param>
	<remarks></remarks>
</member><member name="M:OldW.Soil.Soil_Model.FillSoil(OldW.Soil.Soil_Excav)">
	<summary>
 从当前的开挖状态中，添加进指定的一块土，用来模拟土方的回填，或者反向回滚开挖状态
 </summary>
	<param name="SoilToRemove"></param>
	<remarks></remarks>
</member><member name="T:OldW.Soil.Soil_Model">
	<summary>
 基坑中的开挖土体，整个模型中，只有一个土体元素
 </summary>
	<remarks></remarks>
</member><member name="F:OldWApplication.F_Application">
	<summary>
 当前正在运行的Revit的Application程序对象
 </summary>
	<remarks></remarks>
</member><member name="P:OldWApplication.Application">
	<summary>
 当前正在运行的Revit的Application程序对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks>在每一次通过IExternalCommand接口执行的外部命令中，都可以从中提取出一个Application对象，
 从变量上来说，每次的这个Application之间都是 not equal的，但是，这些Application对象都是代表Revit当前正在运行的应用程序，即其本质上是相同的。</remarks>
</member><member name="F:OldWApplication.F_OpenedDocuments">
	<summary>
 整个系统中，所有打开的 OldWDocument 文档
 </summary>
	<remarks></remarks>
</member><member name="P:OldWApplication.OpenedDocuments">
	<summary>
 整个系统中，所有打开的 OldWDocument 文档
 </summary>
	<remarks></remarks>
</member><member name="F:OldWApplication.LoadedApplication">
	<summary>
 程序中已经加载进来的唯一的OldWApplication实例
 </summary>
	<remarks></remarks>
</member><member name="F:OldWApplication.IsLoaded">
	<summary>
 程序中是否已经有加载过OldWApplication对象。
 </summary>
	<remarks></remarks>
</member><member name="M:OldWApplication.Create(Autodesk.Revit.ApplicationServices.Application)">
	<summary>
 OldWApplication类在整个程序中只有一个实例，为了保证这一点，会在Create方法中进行判断，
 看在程序中是否已经存在对应的OldWApplication实例，如果有，则直接返回，如果没有，则创建一个新的。
 </summary>
	<param name="App"></param>
	<returns>返回程序中唯一的那一个OldWApplication对象，如果不能正常返回，则抛出异常。</returns>
	<remarks>由于OldWApplication中，对Revit的Application对象进行了很多事件处理，
 所以，如果程序中有n个OldWApplication实例，那么，每一次触发Revit的Application中的事件，
 在OldWApplication中，每一个实例都会对此事件进行一次操作，这会极大地造成程序的混乱。</remarks>
</member><member name="M:OldWApplication.#ctor(Autodesk.Revit.ApplicationServices.Application)">
	<summary>
 为了确保程序中只有唯一的OldWApplication实例，应该将其New方法设置为Private，然后将Create设置为Shared。
 </summary>
	<param name="App"></param>
	<remarks></remarks>
</member><member name="M:OldWApplication.SearchOldWDocument(Autodesk.Revit.DB.Document,System.Int32@)">
	<summary> 在整个系统的集合中，搜索是否有与指定的Document相对应的OldWDocument对象，如果没有，则返回Nothing。 </summary>
	<param name="Doc"></param>
	<param name="ClosingDocumentIndex">即将删除的Document文档中程序的 OpenedDocuments 集合中的下标位置，如果此Document文档不在OpenedDocuments集合中，则其值为-1。</param>
	<returns>有相对应的对象，则返回之，否则返回Nothing。</returns>
	<remarks></remarks>
</member><member name="F:OldWApplication.DocumentIdTobeClosed">
	<summary>
 在 Application.DocumentClosing 事件中，即将要关闭的那个Document的Id值。
 对于同一个Revit文档，在其每次触发 Application.DocumentClosing事件时，其对应的DocumentId值都是不一样的。
 这个DocumentId值只是为了与对应的Application.DocumentClosed事件中的DocumentId值进行匹配。
 </summary>
	<remarks></remarks>
</member><member name="F:OldWApplication.DocumentIndexTobeClosed">
	<summary>
 即将删除的Document文档中程序的 OpenedDocuments 集合中的下标位置，如果此Document文档不在OpenedDocuments集合中，则其值为-1。
 </summary>
</member><member name="T:OldWApplication">
	<summary>
 OldW程序中的应用程序级的操作。通常用来存储或者处理Document或者Element之上的对象。比如程序中所有打开的OldWDocument对象。
 </summary>
	<remarks></remarks>
</member><member name="T:OldWProjectInfo">
	<summary>
 一个OldWDocument的模型中，与基坑相关的一些信息，这些信息是被序列化到模型的项目信息中的参数“OldW_Project”中的。
 </summary>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_StrutAxialForce.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary> 构造函数 </summary>
	<param name="StrutAxialForceElement"> 支撑轴力测点所对应的图元</param>
</member><member name="T:OldW.Instrumentation.Instrum_StrutAxialForce">
	<summary>
 测点_支撑轴力
 </summary>
	<remarks></remarks>
</member><member name="P:OldW.Instrumentation.Instrum_Point.MonitorData">
	<summary>
 点测点的整个施工阶段中的监测数据
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_Point.#ctor(Autodesk.Revit.DB.FamilyInstance,OldW.GlobalSettings.InstrumentationType)">
	<summary>
 构造函数
 </summary>
	<param name="MonitorPoint">所有类型的监测点，包括地表沉降、立柱隆起、支撑轴力等，但不包括测斜管</param>
	<param name="Type">监测点的测点类型，也是测点所属的族的名称</param>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_Point.SaveData">
	<summary>
 将监测数据以序列化字符串保存到对应的Parameter对象中。
 </summary>
	<remarks></remarks>
</member><member name="T:OldW.Instrumentation.Instrum_Point">
	<summary>
 所有类型的监测点，包括地表沉降、立柱隆起、支撑轴力等，但不包括测斜管
 </summary>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_ColumnHeave.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary> 构造函数 </summary>
	<param name="ColumnHeaveElement">立柱垂直位移测点所对应的图元</param>
</member><member name="T:OldW.Instrumentation.Instrum_ColumnHeave">
	<summary>
 测点_立柱垂直位移
 </summary>
	<remarks></remarks>
</member><member name="F:OldW.Instrumentation.Instrum_Incline.IsInsideEarth">
	<summary> 测斜管的位置是在模型中的开挖土体的内部还是外部，即测斜管与开挖土体的Element是否相交。 </summary>
	<remarks>True if the inclinometer is inside the excavation earth, 
 and False if the inclinometer is outside the excavation earth.</remarks>
</member><member name="M:OldW.Instrumentation.Instrum_Incline.#ctor(Autodesk.Revit.DB.FamilyInstance)">
	<summary> 构造函数 </summary>
	<param name="InclinometerElement">测斜管所对应的图元</param>
</member><member name="M:OldW.Instrumentation.Instrum_Incline.FindAdjacentEarthElevation(Autodesk.Revit.DB.FamilyInstance)">
	<summary>
 找到距离此测斜管最近的土体开挖面的标高值
 </summary>
	<param name="SoilElement">模型中的土体单元，即此测斜管附近的开挖土体单元</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OldW.Instrumentation.Instrum_Incline.FindBottomPoint(Autodesk.Revit.DB.XYZ,System.Boolean,Autodesk.Revit.DB.FamilyInstance,Autodesk.Revit.DB.ReferenceIntersector)">
	<summary>
 搜索一个底部坐标点，有了此点后，只要向上发射一条射线，即可以找到此时的开挖面
 </summary>
	<param name="ptInclinometerBottom">测斜管的底部坐标点</param>
	<param name="IsInside">测斜管是否在开挖土体Element的内部</param>
	<param name="Earth">开挖墙体单元</param>
	<param name="IntersectedEarth">用来搜索相交面的开挖土体</param>
	<returns></returns>
	<remarks>  如果测斜管就在土体内部，那么测斜管的底部点就可以直接用来向上发射射线了。
 如果测斜管在土体外部，那么需要以测斜管的底部点为中心，向四周发射多条射线，
 这些射线分别都与土体相交，找到距离土体最近的那一条射线所对应的相交点与相交面，然后将相交点向面内偏移一点点，即可以作为寻找开挖面的射线的原点了。</remarks>
</member><member name="T:OldW.Instrumentation.Instrum_Incline">
	<summary>
 测点_测斜管
 </summary>
	<remarks></remarks>
</member><member name="P:My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:OldW.Instrumentation.MonitorData_Point">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:OldW.Instrumentation.MonitorData_Line">
	<summary>
 线测点中的每一天的监测数据
 </summary>
	<remarks></remarks>
</member><member name="T:OldW.Instrumentation.MonitorData_Length">
	<summary>
	</summary>
	<remarks></remarks>
</member>
</members>
</doc>